/*==================================================================================================
PROGRAM: A Simple C Program to Segregate 0s, 1s, and 2s (not using any 'known' sorting technique)
Created by: Shannen T. Nazareno
Date: 10/18/2022
===================================================================================================*/

#include <stdio.h>

void printArray(int[], int);
void segregate(int[], int, int, int, int);

int main()
{
	int n;
	printf ("Enter number of elements: ");
	scanf ("%d", &n);
	
	int arr[n], i, n0, n1, n2;
	
	printf ("Input %d elements in the array:\n", n);
	for(i=0; i<n; i++)
	{
		
	input:
		printf ("element - %d: ", i);
		scanf ("%d", &arr[i]);
		
		if (arr[i]==0)
		{
			n0++;
		}
		else if(arr[i]==1)
		{
			n1++;
		}
		else if (arr[i]==2)
		{
			n2++;
		}
		else
		{
			printf ("\nInput at position [%d] not applicable for this program. Try again.\n\n", i);
			goto input;
		}
	}
	
	printf ("\nGiven array: ");
	printArray(arr, n);
	
	segregate(arr, n, n0, n1, n2);
	
	printf ("\nSorted array: ");
	printArray(arr, n);
}

void printArray(int arr[], int n)
{
	int i;
	for(i=0; i<n; i++)
	{
		printf ("%4d", arr[i]);
	}
	printf("\n");
}

void segregate(int arr[], int n, int n0, int n1, int n2)
{
	int i, j, k;
	int zero[n0], one[n1], two[n2];
	int count = 0;
	
	i = j = k =0;
	
	for(count; count<n; count++)
	{
		if(arr[count]==0)
		{
			zero[i] = arr[count];
			i++;
		}
		else if (arr[count]==1)
		{
			one[j] = arr[count];
			j++;
		}
		else
		{
			two[k] = arr[count];
			k++;
		}
	}
	
	i = j = k = count = 0;
	
	for(i=0; i<n0 ;i++)
	{
		arr[count++] = zero[i];
	}
	
	for(j=0; j<n1; j++)
	{
		arr[count++] = one[j];
	}
	
	for(k=0; k<n2; k++)
	{
		arr[count++] = two[k];
	}
}
